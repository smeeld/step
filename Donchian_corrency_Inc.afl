Periods = Param("Periods", 10, 1, 300, 1 );
scale=Param("scale", 3, 1, 100, 1);
stop=Param("Stop", 0.005, 0, 100000, 1);
zone=Param("Increase Zone", 4, 0, 100, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
cur_close=0;
art=0;
num_pos=0;
procedure new_long(lev, hr, dy, mn, yr)
  {
    
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    art=pos_start-pos_stop;
    num_pos=1;
    printf("Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
  };
   
procedure new_short (lev, hr, dy, mn,yr)
  {
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    art=pos_stop-pos_start;
    num_pos=1;
    printf("Short =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
   };

procedure check_new (mx, lw, ind, hr, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (H[ind] > mx )
   {
  
     new_long(mx, hr, dy, mn, yr);
   }else{
  if (L[ind] < lw )
    {
   new_short(lw, hr, dy, mn, yr);
     
    };
   };
  };
};

procedure proc_trade (up, lw, ind)
  {

    dy= dates[ind]%100;
   mn=((dates[ind]-dy)%10000)/100;
    yr=(dates[ind]-mn*100-dy)/10000+1900;
      
 
 if (pos_direction==1)
   {  stp=Max(pos_stop, lw);
      if (pos_start < stp OR pos_start==stp)
          {  cur_close=(stp-pos_start)*num_pos; };
    if (L[ind] < pos_stop OR L[ind] < lw)
     {
      pos_direction=0; cur_close=0;
      if (pos_stop > lw){ res=(pos_stop-pos_start)*num_pos;}else{ res=(lw-pos_start)*num_pos; };
     
     
      if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, lw), num_pos, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, lw), num_pos, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
     num_pos=0;
    if ( L[ind] < lw ){ new_short(lw, hour_cnt, dy, mn, yr); };
  }else{ 
  if (H[ind] > (pos_start+zone*art) AND num_pos<2)
      {
       profit_sum=profit_sum+art*zone; num_pos+=1; pos_stop=Max(pos_start, pos_start); pos_start+=art*zone;
        printf("Ok Increase Long Pos New Start=%f  New Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
      };
     st=H[ind]-pos_stop; /*st=Max(pos_start, pos_stop);*/ if(st > art*scale){
      printf("Move Long Stop From %f To %f High=%f ART=%f Day=%f Mnth=%f Year=%f \n", pos_stop, pos_stop+(st-art*scale), H[ind], art, dy, mn, yr);
       pos_stop+=(st-art*scale); }; };
}else{

  if (pos_direction==-1)
   {
      stp=Min(pos_stop, up);
      if (pos_start > stp OR pos_start==stp)
          {  cur_close=(pos_start-stp)*num_pos; };
          
    if (H[ind] > pos_stop OR H[ind]>up)
     {
      pos_direction=0; cur_close=0;
       if (pos_stop < up){ res=(pos_start-pos_stop)*num_pos; }else{ res=(pos_start-up)*num_pos; };
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f Hours=%f Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, up), hour_cnt, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, up), hour_cnt, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
     num_pos=0;
    if ( H[ind]> up ){ new_long(up, hour_cnt, dy, mn, yr); };
   }else{
      if (L[ind]<(pos_start-zone*art) AND num_pos<2)
     { profit_sum=profit_sum+zone*art; num_pos+=1; pos_stop=Min(pos_start, pos_stop); pos_start-=art*zone;
         printf("Ok Increase Short Pos New Start=%f  New Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr); 
      };
      st=pos_stop-L[ind];
       if(st > art*scale){
     printf("Move Short Stop From %f To %f Low=%f  ART=%f Day=%f Mnth=%f Year=%f \n", pos_stop, pos_stop-(st-art*scale), L[ind], art, dy, mn, yr);
       pos_stop-=(st-art*scale); };  };
      }else{
     if (pos_direction==0){ check_new(up, lw,  ind, hour_cnt, dy, mn,yr); };
  };
 };
};

lup=HHV( Ref(H, -1),  Periods );
llw=LLV( Ref(L, -1),  Periods);

Re=MA(Close, 12);
for(i=0; i<BarCount; i++)
 { 
   proc_trade(lup[i], llw[i], i);
   Re[i]=profit_sum+loss_sum+cur_close;
  
 };
printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n", loss_count, profit_count, loss_sum, profit_sum);
Plot(Re, "Donchian_Currency_Inc", colorGreen, styleLine);
 
