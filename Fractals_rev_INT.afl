stop=Param("Stop", 0.005, 0, 1000, 1);
pma=Param("MA", 10, 0, 1000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;
prev_sum=0;
profit_days=0;
loss_days=0;
oldfh=0;
oldfl=0;


procedure new_long(lev, dy, mn, yr)
  { 
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
  };
   
procedure new_short (lev, dy, mn,yr)
  { 
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop,  dy, mn, yr);
   };

procedure check_new (mx, lw, ind, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (mx>0 AND H[ind] > H[mx] AND L[ind]< H[mx])
   {
     
     new_long(H[mx], dy, mn, yr);
   }else{
  if (lw > 0 AND  L[ind] < L[lw] AND H[ind] > L[lw])
    {
   new_short(L[lw], dy, mn, yr);
     
    };
   };
  };
};

procedure proc_trade (up, lw, ind, dy, mn, yr)
  {

    
    res=0;
 if (pos_direction==1)
   {
     
     if (pos_start < L[lw] OR pos_start==L[lw])
          {  cur_close=(L[lw]-pos_start); };
    if (L[ind] < pos_stop OR L[ind] < L[lw])
     {
      pos_direction=0; cur_close=0;
      if (pos_stop > L[lw]){ res=pos_stop-pos_start;}else{ res=L[lw]-pos_start; };
        
     if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, L[lw]),  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, L[lw]), dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
     
    if ( lw >0  AND L[ind] < L[lw] AND H[ind] > L[lw]){  new_short(L[lw], dy, mn, yr); oldfl=0; };
  }; 
}else{

  if (pos_direction==-1)
   {
      
     if (pos_start > H[up] OR pos_start==H[up])
          {  cur_close=(pos_start-H[up]); };
          
    if (H[ind] > pos_stop OR H[ind] > H[up] )
     {
      pos_direction=0; cur_close=0;
       if (pos_stop < H[up]){ res=pos_start-pos_stop; }else{ res=pos_start-H[up]; };
        
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f  Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, H[up]), dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, H[up]),  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
    
    if (up>0 AND H[ind] > H[up]  AND L[ind] < H[up]){ new_long(H[up], dy, mn, yr);  };
   };
  }else{
     if (pos_direction==0){ check_new( up, lw,  ind, dy, mn, yr); };
   };
 };
};

procedure close_pos (ind, dy, mn, yr)
 {
   
     res=0;
     FL=0;
      printf("First Bar High= =%f Close=%f  Low=%f Day=%f  Monh=%f Years=%f \n", H[ind], C[ind], L[ind],  dy, mn, yr);
     if(pos_direction==0){ printf("Loss Day With Stop=%f Days=%f  Monh=%f Years=%f \n", -1*abs(pos_start-pos_stop), dy, mn, yr); }
       if(pos_direction==1) { res=C[ind]-pos_start; };
        if(pos_direction==-1){ res=pos_start-C[ind]; };
       pos_direction=0; cur_close=0; 
   if( res < 0 )
    {

       printf("Loss In Close =%f Close=%f Days=%f  Monh=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      };
      
      if(res>0){
       printf("Profit In Close =%f Close=%f Days=%f  Mont=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
       
       nw=loss_sum+profit_sum; 
       if(nw >= prev_sum)
         { profit_days+=1; printf("Day =%f Month=%f Year=%f Is Profit=%f \n", dy, mn, yr, nw-prev_sum); }
           else{ loss_days+=1; printf("Day =%f Month=%f Year=%f Is Loss=%f \n", dy, mn, yr, nw-prev_sum);  };
            prev_sum=nw;
    };
    


/*PH=H;
PL=L;

for(i=2; i< BarCount-3; i++){
 if(H[i] > H[i-2] AND H[i] > H[i-1] AND H[i]>H[i+1]  AND H[i]> H[i+2] ){ PH[i]=1; }else{ PH[i]=0; };
 if(L[i] < L[i-2] AND L[i] < L[i-1] AND L[i]<L[i+1]  AND L[i]< L[i+2] ){ PL[i]=1; }else{ PL[i]=0; };
};
*/
AR=MA(Close, 9);
MP=EMA(Close, pma); 
prev_day=dates[0]%100;p=0;
for(i=0; i<BarCount; i++)
 { 
    dy= dates[i]%100;
   mn=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
  
  
  if(prev_day!=dy){
   if(p==0){ close_pos(i, dy, mn, yr); 
    AR[i]=profit_sum+loss_sum+cur_close; p=1; continue; };
    prev_day=dy; p=0;
   AR[i]=profit_sum+loss_sum+cur_close;
   oldfh=i;
   oldfl=i;
   continue;
  };
  
   proc_trade(oldfh, oldfl, i, dy, mn, yr);
  if(i>2 AND i< BarCount-2){
   if((H[i] > H[i-2] AND H[i] > H[i-1] AND H[i]>H[i+1]  AND H[i]> H[i+2])  )
        { oldfh=i;  };
   if((L[i] < L[i-2] AND L[i] < L[i-1] AND L[i]<L[i+1]  AND L[i]< L[i+2]) )
       { oldfl=i;  };
 };
 AR[i]=profit_sum+loss_sum+cur_close;
}; 
 printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n \n",
                            loss_count, profit_count, loss_sum, profit_sum);
Plot(AR, "Fractals_REV_INT_ANTIGAP", colorGreen, styleLine );
