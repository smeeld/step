ten_period=Param("Tenkan", 10, 1, 1000, 1);
kij_period=Param("Kijun", 28, 1, 1000, 1);
sen_period=Param("Senkoy", 56, 1, 1000, 1);
delay = Param( "Delayed Line Periods", 0, 0, 250, 1 );
stop=Param("Stop", 0.01, 0, 100000, 1);

offset=Param("Offset", 0, 0, 1000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
Res[0]=0;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;
procedure new_long(lev,  dy, mn, yr)
  {  
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop,  dy, mn, yr);
  };
   
procedure new_short (lev,  dy, mn,yr)
  { 
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
   };


procedure check_new (ten, kij, s2, ind, dy, mn,yr)
  { 
if(ind<(BarCount-1)){ 
   
    
     if(kij<=ten  AND C[ind] > s2 ){   new_long( C[ind], dy, mn,yr); 
        }else{ 
                if(kij>=ten  AND C[ind]<s2 ){   new_short(C[ind], dy, mn,yr); }
              };
           };
        };

procedure proc_trade (ten, kij, s2, ind)
  {

    dy= dates[ind]%100;
   mn=((dates[ind]-dy)%10000)/100;
    yr=(dates[ind]-mn*100-dy)/10000+1900;
    res=0;
 if (pos_direction==1)
   {  
   
   
    if (L[ind]<s2 OR L[ind]<pos_stop OR kij>ten){
       pos_direction=0; cur_close=0;
       
        st=Max(pos_stop, s2); res=st-pos_start-C[ind]/3000;
        
       if (kij>ten AND L[ind]>st){ res=C[ind]-pos_start; };
      
     if( res < 0 )
       {
         
       printf("Loss Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, st), hour_cnt, dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, st), hour_cnt, dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       }; sc=0;
     
   check_new(ten, kij,  s2, ind, dy, mn,yr); 
  }; 
}else{

  if (pos_direction==-1)
   {
   if (H[ind] > pos_stop OR H[ind] > s2 OR kij<ten)
     {
      pos_direction=0; cur_close=0;
     st=Min(pos_stop, s2); res=pos_start-st-C[ind]/3000;
      if (kij<ten AND H[ind] < st){ res=pos_start-C[ind]; };
    
   if( res < 0 )
    {
       
       printf("Loss Short =%f Stop=%f Hours=%f Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, st), hour_cnt, dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit Short =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, st), hour_cnt, dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };

   
    check_new(ten, kij,  s2, ind, dy, mn,yr); 
   };
  }else{
     if (pos_direction==0){ check_new(ten, kij, s2, ind, dy, mn,yr); };
  };
 };
};

TL = ( HHV( Ref(H, 0), ten_period ) + LLV( Ref(L, 0), ten_period ) ) / 2;
SL = ( HHV( Ref(H, 0), kij_period ) + LLV( Ref(L, 0), kij_period ) ) / 2;
Sp1 = ( SL + TL ) / 2;
Sp2 = ( HHV( Ref(H, 0), sen_period) + LLV( Ref(L, 0), sen_period) ) / 2;
AR=MA(Close, 9);
for(i=0; i<BarCount; i++)
 { mx=0; mn=0;
    mx=Sp1[i]; mn=Sp2[i]; 
     tn=TL[i]; kj=SL[i];
   proc_trade(tn, kj,  mn,  i);
   AR[i]=profit_sum+loss_sum+cur_close;
  
 };
 printf("First Days=%f Monys=%f Years=%f \n", fr_dy, fr_mn, fr_yr);
printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n", loss_count, profit_count, loss_sum, profit_sum);
Plot(AR, "Ichemoku", colorGreen, styleLine );
