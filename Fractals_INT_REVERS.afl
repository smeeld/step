stop=Param("Stop", 0.01, 0, 100000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;
profit_days=0;
loss_days=0;
prev_sum=0;
oldfh=0;
oldfl=0;
FL=0;
FLL=0;
FLS=0;
Hn1= Ref(H, -1); 
Hn2= Ref(H, -2); 
Hn3= Ref(H, -3); 
Hn4= Ref(H, -4); 

Ln1= Ref(L, -1); 
Ln2= Ref(L, -2); 
Ln3= Ref(L, -3); 
ln4= Ref(L, -4); 

PH = Hn2 >= Hn1 AND Hn2 >= Hn3 AND Hn2>H AND Hn2>Hn4 /*AND Ln2>Ln3 AND Ln2> Ln1 */AND Hn2>Ln2;
PL = Ln2 <= Ln1 AND Ln2 <= Ln3 AND Ln2<L AND Ln2<Ln4 /*AND Hn2<Hn3 AND Hn2<Hn1 */AND Hn2>Ln2;

 
PH=Ref(PH,2);
PL=Ref(PL,2); 

PH[BarCount-1]= Null;
PL[BarCount-1]= Null;

PH[BarCount-2]= Null;
PL[BarCount-2]= Null;


dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
Res[0]=0;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;
procedure new_long(lev, dy, mn, yr)
  {  FLL=1;
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
  };
   
procedure new_short (lev, dy, mn,yr)
  { FLS=1;
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop,  dy, mn, yr);
   };

procedure check_new (mx, lw, ind, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (mx > 0 AND (H[ind] > H[mx]) AND FLL==0)
   {
     
     new_long(H[mx], dy, mn, yr);
   }else{
  if ( lw > 0 AND (L[ind] < L[lw]) AND FLS==0)
    { 
   new_short(L[lw], dy, mn, yr);
     
    };
   };
  };
};

                        
procedure proc_trade (up, lw, ind, dy, mn, yr)
  {
     if (pos_direction==0)
       { check_new(up, lw, ind, dy, mn,yr); 
        }else{
          if(pos_direction==1){
          
             if(L[ind] < L[lw] AND FLS==0)
                 {  pos_direction=0; r1=L[lw]-pos_start;
                     if(r1<0){ 
                              printf("Loss Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", r1, pos_stop, dy, mn, yr);
                             loss_count+=1;
                             loss_sum+=r1;
                            }else{
                              printf("Profit Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", r1, pos_stop, dy, mn, yr);
                               profit_count+=1;
                                profit_sum+=r1;
                                 };
                       printf("Reverse Long To Short =%f Res=%f Days=%f  Mont=%f Years=%f \n", L[lw], r1, dy, mn, yr);
                      new_short(L[oldfl], dy, mn, yr); oldfl=0;
                  }else{
              
                 if(L[ind]<pos_stop)
                   { pos_direction=0; rl=pos_stop-pos_start;
                      printf("Loss Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", rl, pos_stop, dy, mn, yr);
                      loss_count+=1;
                      loss_sum+=rl;
                
                    };
                 }; 
              };  
         if(pos_direction==-1){
               
           if(H[ind] > H[up] AND FLL==0)
              {  pos_direction=0; r1=pos_start-H[up];
                  if(r1<0){  printf("Loss Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", r1, pos_stop, dy, mn, yr);
                             loss_count+=1;
                             loss_sum+=r1;
                            }else{
                              printf("Profit Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", r1, pos_stop, dy, mn, yr);
                               profit_count+=1;
                                profit_sum+=r1;
                                 };
                 printf("Reverse Short To long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", H[up], r1, dy, mn, yr);
                  new_long(H[up], dy, mn, yr); oldfh=0;
                  
                }else{
                  if(H[ind]>pos_stop)
                   { pos_direction=0; rp=pos_start-pos_stop;
                     printf("Loss Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", rp, pos_stop, dy, mn, yr);
                      loss_count+=1;
                      loss_sum+=rp;
                    }
                  }
               };
           };
       };

procedure close_pos (ind, dy, mn, yr)
 {
   
     res=0;
     FL=0; FLS=0; FLL=0;
     if(pos_direction==0){ printf("Loss Day With Stop=%f Days=%f  Monh=%f Years=%f \n", -1*abs(pos_start-pos_stop), dy, mn, yr); }
       if(pos_direction==1) { res=C[ind]-pos_start; };
        if(pos_direction==-1){ res=pos_start-C[ind]; };
       pos_direction=0; cur_close=0; 
   if( res < 0 )
    {

       printf("Loss In Close =%f Close=%f Days=%f  Monh=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      };
      
      if(res>0){
       printf("Profit In Close =%f Close=%f Days=%f  Mont=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
       
       nw=loss_sum+profit_sum; 
       if(nw >= prev_sum)
         { profit_days+=1; printf("Day =%f Month=%f Year=%f Is Profit=%f \n", dy, mn, yr, nw-prev_sum); }
           else{ loss_days+=1; printf("Day =%f Month=%f Year=%f Is Loss=%f \n", dy, mn, yr, nw-prev_sum);  };
            prev_sum=nw;
    };
    


AR=MA(Close, 9);
prev_day=dates[0]%100;

for(i=0; i<BarCount; i++)
 { 
 mx=0; mn=0;
    dy= dates[i]%100;
   mth=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
    
     
    if(prev_day!= dy)
      { 
        if(L[i] < L[oldfl]){ oldfl=0; };
           if(H[i] > H[oldfh]){ oldfh=0; };
           
        close_pos (i-1, prev_day, mth, yr);
         AR[i]=profit_sum+loss_sum;
          prev_day=dy;
       };
 
   proc_trade(oldfh, oldfl, i, dy, mth, yr);
    if(PH[i]==1 ){ oldfh=i; };
   if(PL[i]==1 ){ oldfl=i; };
   AR[i]=profit_sum+loss_sum+cur_close;
  
 };
 
 printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n Loss Days=%f Profit Days=%f\n",
                            loss_count, profit_count, loss_sum, profit_sum, loss_days, profit_days);
Plot(AR, "Fractals_INT_REV", colorGreen, styleLine );
