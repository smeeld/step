Periods = Param("Periods", 10, 1, 300, 1 );

stop=Param("Stop", 0.005, 0, 100000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
cur_close=0;
procedure new_long(lev, hr, dy, mn, yr)
  {
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
  };
   
procedure new_short (lev, hr, dy, mn,yr)
  {
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
   };

procedure check_new (mx, lw, ind, hr, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (H[ind] > mx AND C[ind] < mx )
   {
  
     new_short(C[ind], hr, dy, mn, yr);
   }else{
  if (L[ind] < lw AND C[ind]>lw)
    {
   new_long(C[ind], hr, dy, mn, yr);
     
    };
   };
  };
};

procedure proc_trade (up, lw, ind)
  {

    dy= dates[ind]%100;
   mn=((dates[ind]-dy)%10000)/100;
    yr=(dates[ind]-mn*100-dy)/10000+1900;
      
 
 if (pos_direction==1)
   { res=0;
     if (L[ind]<pos_stop){ res=pos_stop-pos_start; pos_direction=0; }
      else{
       if (H[ind]> up AND C[ind]< up)
     {
      pos_direction=0; res=C[ind]-pos_start; };
     };
      if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, C[ind]), hour_cnt, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum=loss_sum+res;
      }else{
      if(res>0){
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, C[ind]), hour_cnt, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum=profit_sum+res; };
       };

    if ( H[ind] > up AND C[ind]< up ){ new_short(C[ind], hour_cnt, dy, mn, yr); };
   
}else{

  if (pos_direction==-1)
   { res=0;
      if( H[ind] > pos_stop){ res=pos_start-pos_stop; pos_direction=0; }
      else{
       if (L[ind]< lw AND C[ind]> lw)
     {
      pos_direction=0; res=pos_start-C[ind]; };
     };
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f Hours=%f Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, C[ind]), hour_cnt, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum=loss_sum+res;
      }else{ if(res>0){
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_start, C[ind]), hour_cnt, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum=profit_sum+res;};
       };

    if ( L[ind]<lw AND C[ind]>lw ){ new_long(C[ind], hour_cnt, dy, mn, yr); };
   
      }else{
     if (pos_direction==0){ check_new(up, lw, ind, hour_cnt, dy, mn,yr); };
  };
 };
};

lup=HHV( Ref(H, -1),  Periods );
llw=LLV( Ref(L, -1),  Periods);

Re=MA(Close, 12);
for(i=0; i<BarCount; i++)
 { 
   proc_trade(lup[i], llw[i], i);
   Re[i]=profit_sum+loss_sum+cur_close;
  hour_cnt+=1;if(hour_cnt==24){ hour_cnt=10; };
 };
printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n", loss_count, profit_count, loss_sum, profit_sum);
Plot(Re, "Tortille_Sup", colorGreen, styleLine);
 
