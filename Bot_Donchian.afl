ten=Param("Tenkan", 10, 1, 1000, 1);
kij=Param("Kijun", 28, 1, 1000, 1);
sen=Param("Senkoy", 56, 1, 1000, 1);
delay = Param( "Delayed Line Periods", 0, 0, 1000, 1 );
max_pos = Param( "Max Pos", 2, 1, 1000, 1 );
stop=Param("Stop", 0.01, 0, 100000, 1);
offset=Param("Offset", 0, 0, 1000, 1);
donchian = Param( "Donchian Periods", 10, 1, 300, 1 );
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
Res[0]=0;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;
profit_days=0;
loss_days=0;
prev_sum=0;
num_pos=0;
art=0;
procedure new_long(lev, hr, dy, mn, yr)
  { num_pos=1;
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    art=stop*lev;
    printf("Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
  };
   
procedure new_short (lev, hr, dy, mn,yr)
  { num_pos=1;
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    art=stop*lev;
    printf("Short =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
   };

procedure check_new (mx, lw, ind, hr, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (H[ind] > mx)
   {
     
     new_long(mx, hr, dy, mn, yr);
   }else{
  if (L[ind] < lw)
    {
   new_short(lw, hr, dy, mn, yr);
    
    };
   };
  };
};

procedure proc_trade (up, lw, fh, fl, ind, dy, mn, yr)
  {

    res=0;
     pl=Min(lw, fl);
     ph=Max(up, fh);
 if (pos_direction==1)
   {
     
    if (pos_start < lw OR pos_start==lw)
          {  cur_close=(lw-pos_start)*num_pos; };
          
    if (L[ind] < pos_stop OR L[ind]< lw)
     {
      pos_direction=0; cur_close=0;
      if (pos_stop > lw){ res=-1*art*num_pos; }else{ res=(lw-pos_start)*num_pos; };
     if( res < 0 )
       {
          
       printf("Loss Long =%f Stop=%f NUM_POS=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, lw), num_pos, dy, mn, yr);
        loss_count+=1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%fNUM_POS=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, lw), num_pos, dy, mn, yr);
        profit_count+=1;
        profit_sum+=(res-(C[ind]/3000));
       };
      num_pos=0;
    if ( L[ind] < pl ){ new_short(pl, hour_cnt, dy, mn, yr); };
  }else{

  if (H[ind] > (pos_start+art) AND num_pos<max_pos)
      {
       profit_sum=profit_sum+art; num_pos+=1; pos_stop=pos_start; pos_start+=art;
        printf("Ok Increase Long Pos New Start=%f  New Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
      }; 
    }
}else{

  if (pos_direction==-1)
   {
      
     if (pos_start >= up)
          {  cur_close=(pos_start-up)*num_pos; };
          
    if (H[ind] >= pos_stop OR H[ind] >= up)
     {
      pos_direction=0; cur_close=0;
       
         if (pos_stop < up){ res=-1*art*num_pos; }else{ res=(pos_start-up)*num_pos; };
   if( res < 0 )
    {
       
       printf("Loss Short =%f Stop=%f Num_POS=%f Days=%f Monh=%f Years=%f \n", res, Min(pos_stop, up), num_pos,  dy, mn, yr);
        loss_count+=1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Short =%f Stop=%f NUM_POS=%f Days=%f  Month=%f Years=%f \n", res, Min( pos_stop, up), num_pos,  dy, mn, yr);
        profit_count+=1;
        profit_sum+=(res-(C[ind]/3000));
       };
      num_pos=0;
    if ( H[ind]> ph){ new_long(ph, hour_cnt, dy, mn, yr); };
   }else{
  if (L[ind]<(pos_start-art) AND num_pos<max_pos)
     { profit_sum=profit_sum+art; num_pos+=1; pos_stop=pos_start; pos_start-=art;
         printf("Ok Increase Short Pos New Start=%f  New Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr); 
      };
   };
 
  }else{
      
      
     if (pos_direction==0){ check_new(fh, fl, ind, hour_cnt, dy, mn,yr); };
  };
 };
};


procedure close_pos (ind, dy, mn, yr)
 {
   
     res=0;
     
       if(pos_direction==1)
          { res=C[ind]-pos_start; 
            }else{
                   if(pos_direction==-1){ res=pos_start-C[ind]; };
                  };
       pos_direction=0; cur_close=0; 
   if( res < 0 )
    {

       printf("Loss In Close =%f Close=%f Days=%f  Monh=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit In Close =%f Close=%f Days=%f  Mont=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
       nw=loss_sum+profit_sum; 
       if(nw >= prev_sum)
         { profit_days+=1; printf("Day =%f Month=%f Year=%f Is Profit=%f \n", dy, mn, yr, nw-prev_sum); }
           else{ loss_days+=1; printf("Day =%f Month=%f Year=%f Is Loss=%f \n", dy, mn, yr, nw-prev_sum);  };
            prev_sum=nw;
    };
    

TL = ( HHV( Ref(H, -1*delay), kij ) + LLV( Ref(L, -1*delay), kij ) ) / 2;
SL = ( HHV( Ref(H, -1*delay), ten  ) + LLV( Ref(L, -1*delay), ten ) ) / 2;
Sp1 = ( SL + TL ) / 2;
Sp2 = ( HHV( Ref(H, -1*delay), sen ) + LLV( Ref(L, -1*delay), sen ) ) / 2;

DH=HHV( Ref(H, -1),  donchian );
DL=LLV( Ref(L, -1),  donchian);


AR=MA(Close, 9);

prev_day=dates[0]%100;

for(i=0; i<BarCount; i++)
 { mx=0; mn=0;
    dy= dates[i]%100;
   mth=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
    
     if (Sp1[i] > Sp2[i]){ mx=Sp1[i]; mn=Sp2[i]; }else{ mx=Sp2[i]; mn=Sp1[i]; };
     
    
   proc_trade(mx, mn, DH[i], DL[i], i, dy, mth, yr);
   AR[i]=profit_sum+loss_sum+cur_close;
   
 };
 printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n Loss Days=%f Profit Days=%f\n",
                            loss_count, profit_count, loss_sum, profit_sum, loss_days, profit_days);
                            Plot(AR, "Bot_Donchian", colorGreen, styleLine );