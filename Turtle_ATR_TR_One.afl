Periods =Optimize("Period", 10, 10, 150, 5 );

Max_pos=4;//Param("Max POS", 3, 1, 4, 1);
//RoundLotSize=/Param("Lot Size", 1, 1, 1000000, 1);
stop=Optimize("Stop", 1, 0.5, 2, 0.5);
tr=Optimize("Trailing Scale", 2, 1, 8, 1);

SetOption("InitialEquity", 100000);
SetOption("AllowSameBarExit", True);
SetOption("ActivateStopsImmediately", True);
SetOption("FuturesMode", True);


MarginDeposit= 1;//Param("Margin Cost Of Contract", -10, -100, 100, 1);
PositionSize=1;//Param("Num Contracts ", 1, 1, 100, 1);//Param("Procent Of Fund To Open Positions", -20, -100, 0, 1);
PointValue=Param("Cost Of Punct", 1, 0, 1000000000, 1);
SetBacktestMode(backtestRegularRawMulti);
lup=HHV( Ref(H, -1),  Periods );
llw=LLV( Ref(L, -1),  Periods);
atrs=ATR(14);
cnt=0;
pos_direction=0;
pos_stop=0;
pos_start=0;
stps=Null;
 stpl=Null;
CoverPrice=Null;
SellPrice= Null;

Buy=Null;
Short=Null;
BuyPrice=Null;
ShortPrice=null;
Cover=Null;
Sell=Null;



procedure new_long(lev, i, at)
  { 
    pos_direction=1;
   cnt+=1;
    art=lev*stop;
    pos_start=lev;
    pos_stop=lev-stop*at;
     
    BuyPrice[i]=lev;
    Buy[i]=1;
    
    
  };
   
procedure new_short (lev, i, at)
  { 
    pos_direction=-1;
    cnt+=1;
     art=lev*stop;
      pos_start=lev;
   pos_stop=lev+at*stop;
   
     ShortPrice[i]=lev;
     Short[i]=1;
   
  
   };

procedure check_new (mx, lw,  ind, at)
  {
if(ind<(BarCount-1)){
  if (H[ind] > mx )
   {
  
    new_long(mx+C[ind]/3000, ind, at);
   }else{
  if (L[ind] < lw )
    {
  new_short(lw-C[ind]/3000, ind, at);
     
    };
   };
  };
};

procedure check_new_c (mx, lw,  ind, at)
  {
if(ind<(BarCount-1)){
  if (C[ind] > mx )
   {
  
    new_long(C[ind], ind, at);
   }else{
  if (C[ind] < lw )
    {
  new_short(C[ind], ind, at);
     
    };
   };
  };
};


procedure proc_trade ( up, lw, ind, at)
  {

    
    if (pos_direction==1)
   {
      stpl[ind]=pos_stop;
   
    st=Max(pos_stop, lw);
    if (L[ind] < st)
     {
      pos_direction=0; 
      SellPrice[ind]=st-C[ind]/3000;
      Sell[ind]=1;
     check_new(up, lw, ind, at); 
       
      }else{
  
    
           s=H[ind]-pos_stop;
           if(s>tr*at){ pos_stop+=(s-tr*at); };
       
       };
 
}else{

  if (pos_direction==-1)
   { stps[ind]=pos_stop;
      st=Min(pos_stop, up);
     
    if (H[ind] > st)
     {
      pos_direction=0; cnt=0;
        CoverPrice[ind]=st+C[ind]/3000;
        Cover[ind]=1;
     
    check_new(up, lw, ind, at); 
   }else{
     
   
           s=pos_stop-L[ind];
           if(s>tr*at){ pos_stop-=(s-tr*at); };
         
       };
  }else{
      
      
     if (pos_direction==0){ check_new(up, lw, ind, at); };
  };
 };
};

procedure proc_trade_c ( up, lw, ind, at)
  {

    
    if (pos_direction==1)
   {
      stpl[ind]=pos_stop;
   
    st=Max(pos_stop, lw);
    if (L[ind] < st)
     {
      pos_direction=0;  cnt=0;
      SellPrice[ind]=st-C[ind]/3000;
      Sell[ind]=1;
     check_new_c(up, lw, ind, at); 
       
      }else{
  
    
           s=H[ind]-pos_stop;
           if(s>tr*at){ pos_stop+=(s-tr*at); };
          
       };
 
}else{

  if (pos_direction==-1)
   { stps[ind]=pos_stop;
      st=Min(pos_stop, up);
     
    if (H[ind] > st)
     {
      pos_direction=0; cnt=0;
        CoverPrice[ind]=st+C[ind]/3000;
        Cover[ind]=1;
     
    check_new_c(up, lw, ind, at); 
   }else{
     
   
          
           s=pos_stop-L[ind];
           if(s>tr*at){ pos_stop-=(s-tr*at); };
        
       
    };
  }else{
      
      
     if (pos_direction==0){ check_new_c(up, lw, ind, at); };
  };
 };
};

dates=datenum();
prev_day=dates[0]%100;
for(i=0; i<BarCount; i++)
 {
    dy= dates[i]%100;
   mn=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
  if(prev_day!=dy){
    prev_day=dy;
    proc_trade_c( lup[i], llw[i], i, atrs[i]); }else{ proc_trade( lup[i], llw[i], i, atrs[i]); };
      
  };
/*

CoverPrice=Min(lup, stps)+C/3000;
SellPrice=Max(llw, stpl)-C/3000;

Buy=IIf( Ref(datenum(), -1) < datenum(), C>lup, H>lup);
Short=IIf( Ref(datenum(), -1) < datenum(), C<llw, L<llw);
BuyPrice=IIf( Ref(datenum(), -1) < datenum(), C, lup+C/3000);
ShortPrice=IIf( Ref(datenum(), -1) < datenum(), C, llw-C/3000);
Cover=H>Min(lup, stps);
Sell=L<Max(llw, stpl);
Buy = ExRem( Buy, Sell );
Sell = ExRem( Sell, Buy );
Short = ExRem( Short, Cover );
Cover = ExRem( Cover, Short );
*/


Plot( C, "Close", colorDefault, styleNoTitle | GetPriceStyle() );
Plot(lup, "UP11", colorGreen, styleLine );
Plot(llw, "UP11", colorGreen, styleLine );


PlotShapes( Buy*shapeUpArrow, colorBrightGreen, 0, Low );
PlotShapes( Short*shapeDownArrow, colorRed, 0, High ); 
Plot( stpl, "Chand1", ParamColor( "Chand Color:", colorGreen ), ParamStyle( "Chand Style", styleDashed ) );
Plot( stps, "Chand2", ParamColor( "Chand Color1:", colorBlue ), ParamStyle( "Chand Style", styleDashed ) );
PlotShapes( Sell*shapeUpArrow, colorYellow, 0, Low );
PlotShapes( Cover*shapeDownArrow, colorBlue, 0, High );


