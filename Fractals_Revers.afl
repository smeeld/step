stop=Param("Stop", 0.01, 0, 1000, 1);
pma=Param("MA", 10, 0, 1000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
start=0;
fr_mn=0;
fr_dy=0;
fr_yr=0;
cur_close=0;

oldfh=0;
oldfl=0;


procedure new_long(lev, dy, mn, yr)
  { 
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, dy, mn, yr);
  };
   
procedure new_short (lev, dy, mn,yr)
  { 
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop,  dy, mn, yr);
   };

procedure check_new (mx, lw, ind, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (C[ind] > H[mx])
   {
     
     new_long(C[ind], dy, mn, yr); oldfh=0;
   }else{
  if (C[ind] < L[lw] )
    {
   new_short(C[lw], dy, mn, yr); oldfl=0;
     
    };
   };
  };
};

procedure proc_trade (up, lw, ind, dy, mn, yr)
  {

    
    res=0;
 if (pos_direction==1)
   {
     if(oldfl>0){
     if (pos_start < L[oldfl] OR pos_start==L[oldfl])
          {  cur_close=(L[oldfl]-pos_start); }; };
    if (L[ind] < pos_stop ){ 
         res=pos_stop-pos_start; }else{
    
       if(oldfl>0) { if(L[ind] < L[oldfl]){
              res=L[oldfl]-pos_start; }; };
         };
         
     if( res != 0 )
       {
       pos_direction=0; cur_close=0;
       if(res<0){printf("Loss Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, L[oldfl]),  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }; if(res>0){
       printf("Profit Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, L[oldfl]), dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
     };
   check_new( up, lw,  ind, dy, mn, yr);
   
}else{

  if (pos_direction==-1)
   {
      if(oldfh!=0){
     if (pos_start > H[oldfh] OR pos_start==H[oldfh])
          {  cur_close=(pos_start-H[oldfh]); };};
          
    if (H[ind] > pos_stop )
     { res=pos_start-pos_stop; }else{ if (oldfh>0 AND H[ind] > H[oldfh] ){ res=pos_start-H[oldfh]; }; };
        
   if( res != 0 )
    { pos_direction=0; cur_close=0;
     if(res<0){
       printf("Loss Short =%f Stop=%f  Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, H[up]), dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }; if(res>0){
       printf("Profit Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, H[up]),  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
    };
check_new( up, lw,  ind, dy, mn, yr);
  }else{
     if (pos_direction==0){ check_new( up, lw,  ind, dy, mn, yr); };
   };
 };
};


/*PH=H;
PL=L;

for(i=2; i< BarCount-3; i++){
 if(H[i] > H[i-2] AND H[i] > H[i-1] AND H[i]>H[i+1]  AND H[i]> H[i+2] ){ PH[i]=1; }else{ PH[i]=0; };
 if(L[i] < L[i-2] AND L[i] < L[i-1] AND L[i]<L[i+1]  AND L[i]< L[i+2] ){ PL[i]=1; }else{ PL[i]=0; };
};
*/
Hn1= Ref(H, -1); 
Hn2= Ref(H, -2); 
Hn3= Ref(H, -3); 
Hn4= Ref(H, -4); 
Hn5= Ref(H, -5); 
Hn6= Ref(H, -6); 
Hn7= Ref(H, -7); 
Hn8= Ref(H, -8); 
Hn9= Ref(H, -9); 
Hn10= Ref(H, -10); 
Hn11= Ref(H, -11); 
Hn12= Ref(H, -12); 
Hn13= Ref(H, -13); 
Hn14= Ref(H, -14); 
Hn15= Ref(H, -15); 
Hn16= Ref(H, -16); 
Hn17= Ref(H, -17); 
Hn18= Ref(H, -18); 
Hn19= Ref(H, -19); 
Hn20= Ref(H, -20); 
Hn21= Ref(H, -21);
 
Hn9= Ref(H, -9); 
Hn10= Ref(H, -10); 
Ln1= Ref(L, -1); 
Ln2= Ref(L, -2); 
Ln3= Ref(L, -3); 
ln4= Ref(L, -4); 
Ln5= Ref(L, -5); 
Ln6= Ref(L, -6); 
Ln7= Ref(L, -7); 
ln8= Ref(L, -8); 
Ln9= Ref(L, -9); 
Ln10= Ref(L, -10); 
Ln11= Ref(L, -11); 
ln12= Ref(L, -12); 
Ln13= Ref(L, -13);
ln14= Ref(L, -14); 
Ln15= Ref(L, -15); 
Ln16= Ref(L, -16); 
Ln17= Ref(L, -17); 
ln18= Ref(L, -18); 
Ln19= Ref(L, -19);  
ln20= Ref(L, -20); 
Ln21= Ref(L, -21); 

PH = Hn11 > Hn1 AND Hn11 > Hn2 AND Hn11 > Hn3 AND Hn11 > Hn4 AND Hn11 >Hn5 AND Hn11> Hn6  AND Hn11> Hn7 AND
     Hn11 > Hn8 AND Hn11 > Hn9 AND Hn11 > Hn10 AND Hn11 > Hn12 AND Hn11 >Hn13 AND Hn11> Hn14 AND Hn11 > Hn15 AND Hn11 >Hn16 AND Hn11> Hn17
     AND  Hn11 > Hn18 AND Hn11 >Hn19 AND Hn11> Hn20 AND Hn11 > Hn21;
PL =  Ln11 < Ln1 AND Ln11 < Ln2 AND Ln11 < Ln3 AND Ln11 < Ln4 AND Ln11 < Ln5 AND Ln11> Ln6  AND
     Ln11 < Ln7 AND Ln11< Ln8 AND  Ln11 < Ln9 AND Ln11 < Ln10 AND Ln11 < Ln12 AND Ln11 < Ln13 AND Ln11 < Ln14  AND
     Ln11 < Ln15 AND Ln11 < Ln16 AND Ln11 < Ln17 AND Ln11 < Ln18 AND Ln11 < Ln19 AND Ln11 < Ln20 AND Ln11< Ln21; 
  
 
PH=Ref(PH,11);
PL=Ref(PL,11); 


AR=MA(Close, 9);
MP=EMA(Close, pma); 
for(i=0; i<BarCount; i++)
 { 
    dy= dates[i]%100;
   mn=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
   proc_trade(oldfh, oldfl, i, dy, mn, yr);
   if(PH[i]==1){ oldfh=i; };
   if(PL[i]==1){ oldfl=i; };
 /*if(i>2 AND i< BarCount-2){
   if((H[i] > H[i-2] AND H[i] > H[i-1] AND H[i]>H[i+1]  AND H[i]> H[i+2])  )
        { oldfh=i;  };
   if((L[i] < L[i-2] AND L[i] < L[i-1] AND L[i]<L[i+1]  AND L[i]< L[i+2]) )
       { oldfl=i;  };*/
  
   AR[i]=profit_sum+loss_sum+cur_close;
  
 };
 
 printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n \n",
                            loss_count, profit_count, loss_sum, profit_sum);
Plot(AR, "Fractals_REV", colorGreen, styleLine );
