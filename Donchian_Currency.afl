Periods = Param("Periods", 10, 1, 300, 1 );
scale=Param("scale", 3, 1, 100, 1);
stop=Param("Stop", 0.005, 0, 100000, 1);
nm=Param("Num Contact", 1, 1, 100, 1);
m1=EMA(C, Param("MA1", 70, 10, 300, 1));
m2=EMA(C, Param("MA2", 30, 10, 300, 1)); 
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
cur_close=0;
art=0;
num_pos=0;
procedure new_long(lev, ind, dy, mn, yr)
  {
    
    pos_direction=1;
    pos_start=lev+C[ind]/3000;
    pos_stop=lev-stop*lev;
    art=lev*stop;
    
    printf("Long =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop,  dy, mn, yr);
  };
   
procedure new_short (lev, ind, dy, mn,yr)
  {
    pos_direction=-1;
    pos_start=lev-C[ind]/3000;
    pos_stop=lev+stop*lev;
    art=lev*stop;
    
    printf("Short =%f Stop=%f  Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, ind, dy, mn, yr);
   };

procedure check_new (mx, lw, ind, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (H[ind] > mx )
   {
  
     new_long(mx, ind, dy, mn, yr);
   }else{
  if (L[ind] < lw  )
    {
   new_short(lw, ind, dy, mn, yr);
     
    };
   };
  };
};

procedure check_new_c (mx, lw, ind,  dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (C[ind] > mx  )
   {
  
     new_long(C[ind], ind, dy, mn, yr);
   }else{
  if (C[ind] < lw )
    {
   new_short(C[ind], ind, dy, mn, yr);
     
    };
   };
  };
};

procedure proc_trade (up, lw, ind, dy, mn, yr)
  {
      
 
 if (pos_direction==1)
   {  stp=Max(pos_stop, lw);
      if (pos_start <= stp )
          {  cur_close=(stp-pos_start); };
    if (L[ind] < stp)
     {
      pos_direction=0; cur_close=0;
      res=stp-pos_start;
     
     
      if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, lw), 0, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, lw), 0, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
     
         check_new(up, lw,  ind, dy, mn,yr); 
  }else{ 
  
     st=H[ind]-pos_stop;
      if(st > art*scale){
    
       pos_stop+=(st-art*scale); }; };
}else{

  if (pos_direction==-1)
   {
      stp=Min(pos_stop, up);
      if (pos_start >= stp )
          {  cur_close=(pos_start-stp); };
          
    if (H[ind] > stp)
     {
      pos_direction=0; cur_close=0;
       res=pos_start-stp;
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, up), dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, up), dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
    
   check_new(up, lw,  ind, dy, mn,yr); 
   }else{
      
      st=pos_stop-L[ind];
       if(st > art*scale){
     
       pos_stop-=(st-art*scale); };  
       };
      }else{
     if (pos_direction==0){ check_new(up, lw,  ind, dy, mn,yr); };
  };
 };
};


procedure proc_trade_c (up, lw, ind, dy, mn, yr)
  {

 if (pos_direction==1)
   {  stp=Max(pos_stop, lw);
      if (pos_start <= stp )
          {  cur_close=(stp-pos_start); };
    if (L[ind] < stp)
     {
      pos_direction=0; cur_close=0;
      res=stp-pos_start;
     
     
      if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, lw), 0, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Pos=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, lw), 0, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
     
   check_new_c(up, lw, ind, dy, mn, yr);
  }else{ 
  
     st=H[ind]-pos_stop;  if(st > art*scale){
       pos_stop+=(st-art*scale); }; };
}else{

  if (pos_direction==-1)
   {
      stp=Min(pos_stop, up);
      if (pos_start >= stp )
          {  cur_close=(pos_start-stp); };
          
    if (H[ind] > stp)
     {
      pos_direction=0; cur_close=0;
       res=pos_start-stp;
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f  Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, up), dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum+=(res-(C[ind]/3000));
      }else{
       printf("Profit Long =%f Stop=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_stop, up),  dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum+=(res-(C[ind]/3000));
       };
    
   check_new_c(up, lw,  ind, dy, mn,yr);
   }else{
      
      st=pos_stop-L[ind];
       if(st > art*scale){
       pos_stop-=(st-art*scale); };  };
      }else{
     if (pos_direction==0){ check_new_c(up, lw,  ind, dy, mn,yr); };
  };
 };
};


lup=HHV( Ref(H, -1),  Periods );
llw=LLV( Ref(L, -1),  Periods);

Re=MA(Close, 12);
prev_day=dates[0]%100;
for(i=0; i<BarCount; i++)
 { 
 
     dy= dates[i]%100;
   mn=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
     if(prev_day!=dy){
        proc_trade_c(lup[i], llw[i], i, dy, mn, yr);
        prev_day=dy; }else{
   proc_trade(lup[i], llw[i], i, dy, mn, yr);
    };
   Re[i]=nm*(profit_sum+loss_sum+cur_close);
 
 };
printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n", loss_count, profit_count, loss_sum, profit_sum);
Plot(Re, "Donchian_Currency", colorGreen, styleLine);
 
