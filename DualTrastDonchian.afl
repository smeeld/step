hi=Param("UP", 20, 1, 1000, 1);
hil=Param("UP2", 10, 1, 1000, 1);
scale=Param("Scale", 0.5, 0, 1000,1);
stop=Param("Stop", 0.005, 0, 10000, 1);
sc=Param("SG", 1, 0, 1000, 1);
dates=datenum();
pos_start=0;
pos_direction=0;
pos_stop=0;
loss_count=0;
profit_count=0;
loss_sum=0;
profit_sum=0;
hour_cnt=10;
cur_close=0;
profit_days=0;
loss_days=0;
prev_sum=0;
art=0;
procedure new_long(lev, hr, dy, mn, yr)
  {
    pos_direction=1;
    pos_start=lev;
    pos_stop=lev-stop*lev;
    printf("Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
  };
   
procedure new_short (lev, hr, dy, mn,yr)
  {
    pos_direction=-1;
    pos_start=lev;
    pos_stop=lev+stop*lev;
    printf("Short =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", pos_start, pos_stop, hr, dy, mn, yr);
   };

procedure check_new (mx, lw, ind, hr, dy, mn, yr)
  {
if(ind<(BarCount-1)){
  if (C[ind] > mx )
   {
  
     new_long(C[ind], hr, dy, mn, yr);
   }else{
  if (C[ind] < lw )
    {
   new_short(C[ind], hr, dy, mn, yr);
     
    };
   };
  };
};

procedure proc_trade (up, lw,  ind, dy, mn, yr)
  {

 if (pos_direction==1)
   {
      if (pos_start < lw OR pos_start==lw)
          {  cur_close=(lw-pos_start); };
    if (L[ind] < pos_stop OR L[ind]< lw)
     {
      pos_direction=0; cur_close=0;
      if (pos_stop > lw){ res=pos_stop-pos_start;}else{ res=lw-pos_start; };
     
      if( res < 0 )
       {

       printf("Loss Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max(pos_stop, lw), hour_cnt, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum=loss_sum+res;
      }else{
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Max( pos_stop, lw), hour_cnt, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum=profit_sum+res;
       };

    if ( C[ind]<lw ){ new_short(C[ind], hour_cnt, dy, mn, yr); };
  }; 
}else{

  if (pos_direction==-1)
   {
      if (pos_start > up OR pos_start==up)
          {  cur_close=(pos_start-up); };
          
    if (H[ind] > pos_stop OR H[ind] > up)
     {
      pos_direction=0; cur_close=0;
       if (pos_stop < up){ res=pos_start-pos_stop; }else{ res=pos_start-up; };
   if( res < 0 )
    {

       printf("Loss Short =%f Stop=%f Hours=%f Days=%f  Monh=%f Years=%f \n", res, Min(pos_stop, up), hour_cnt, dy, mn, yr);
        loss_count=loss_count+1;
        loss_sum=loss_sum+res;
      }else{
       printf("Profit Long =%f Stop=%f Hours=%f Days=%f  Mont=%f Years=%f \n", res, Min( pos_start, up), hour_cnt, dy, mn, yr);
        profit_count=profit_count+1;
        profit_sum=profit_sum+res;
       };

    if ( C[ind]> up){ new_long(C[ind], hour_cnt, dy, mn, yr); };
   }; 
      }else{
     if (pos_direction==0){ check_new(up, lw, ind, hour_cnt, dy, mn,yr); };
  };
 };
};

procedure close_pos (ind, dy, mn, yr)
 {
   
     res=0;
       if(pos_direction==1)
          { res=C[ind]-pos_start; 
            }else{
                   if(pos_direction==-1){ res=pos_start-C[ind]; };
                  };
       pos_direction=0; cur_close=0; 
   if( res < 0 )
    {

       printf("Loss In Close =%f Close=%f Days=%f  Monh=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        loss_count+=1;
        loss_sum+=res;
      }else{
       printf("Profit In Close =%f Close=%f Days=%f  Mont=%f Years=%f \n", res, C[ind],  dy, mn, yr);
        profit_count+=1;
        profit_sum+=res;
       };
       
       nw=loss_sum+profit_sum; 
       if(nw >= prev_sum)
         { profit_days+=1; printf("Day =%f Month=%f Year=%f Is Profit=%f \n", dy, mn, yr, nw-prev_sum); }
           else{ loss_days+=1; printf("Day =%f Month=%f Year=%f Is Loss=%f \n", dy, mn, yr, nw-prev_sum);  };
            prev_sum=nw;
    };

hhb=HHV(Ref(H, -1), hi);
hhc=HHV(Ref(C, -1), hi);
llb=LLV(Ref(L, -1), hi);
llc=LLV(Ref(C, -1), hi);

hhb=HHV(Ref(H, -1), hi);
hhc=HHV(Ref(C, -1), hi);
llb=LLV(Ref(L, -1), hi);
llc=LLV(Ref(C, -1), hi);
hhbl=HHV(Ref(H, -1), hil);
hhcl=HHV(Ref(C, -1), hil);
llbl=LLV(Ref(L, -1), hil);
llcl=LLV(Ref(C, -1), hil);
tmp=(hhb-llc);
tmp2=(hhc-llb);
mas=IIf(tmp>=tmp2, tmp, tmp2);
tmpl=(hhbl-llcl);
tmp2l=(hhcl-llbl);
masl=IIf(tmpl>=tmp2l, tmpl, tmp2l);
ar1=O+scale*mas;
ar2=O-scale*masl;


Re=MA(Close, 12);
prev_day=dates[0]%100;
for(i=0; i<BarCount; i++)
 { mx=0; mn=0;
    dy= dates[i]%100;
   mn=((dates[i]-dy)%10000)/100;
    yr=(dates[i]-mn*100-dy)/10000+1900;
    if(prev_day!= dy)
      { 
        
        close_pos (i-1, prev_day, mn, yr);
          /*AR[i]=profit_sum+loss_sum+cur_close;
          prev_day=dy;
         continue;*/
         prev_day= dy;
       };

   proc_trade(ar1[i], ar2[i], i, dy, mn, yr);
   Re[i]=profit_sum+loss_sum+cur_close;
 
 };
printf("Ok Loss Amount=%f Prof Amount=%f Loss Sum=%f Profit Sum=%f\n", loss_count, profit_count, loss_sum, profit_sum);
Plot(Re, "Dual_trast_Donchian", colorGreen, styleLine);
 
